/*
Note the following:
* XOWA does not run /xowa/bin/[OS_NAME]/xowa/cfg/os.default.gfs
* XOWA does run     /xowa/user/anonymous/app/cfg/os.gfs

When XOWA starts, it will check for an os.gfs file
* If os.gfs doesn't exist, it will copy os.default.gfs to os.gfs
* If os.gfs does exist, it won't do anything. In other words, it'll leave the existing os.gfs in place.

After the check, XOWA will then run os.gfs.

The current contents of os.gfs are entirely path-related. If the paths are different on you system, feel free to change them.
*/
app.scripts.fail_if_unhandled = 'n';

app.gui {
  browser_type    = 'mozilla';                          // 'mozilla' or 'webkit'
  xul_runner_path = '~{<>bin_plat_dir<>}xulrunner/v31'; // path should be set to xulrunner location; '~{<>bin_plat_dir<>}xulrunner_v24' defaults to '/xowa/bin/platform_name/xulrunner_v24' (EX: on Windows 'C:\xowa\bin\windows_64\xulrunner_v24')
}
app.cfg {
  // import apps
  set_dflt('xowa.bldr.import.apps.bz2_stdout.cmd'      , <:{'~{<>bin_plat_dir<>}7-zip\7za|x -so "~{src}"'}:>);
  set_dflt('xowa.bldr.import.apps.bz2'                 , <:{'~{<>bin_plat_dir<>}7-zip\7za|x -y -r "~{src}" -o"~{trg_dir}"'}:>);
  set_dflt('xowa.bldr.import.apps.gz'                  , <:{'~{<>bin_plat_dir<>}7-zip\7za|x -y -r "~{src}" -o"~{trg_dir}"'}:>);

  // file viewer apps
  set_dflt('xowa.files.apps.view.web'                  , <:{'cmd|/c start "" "~{url}"'}:>);
  set_dflt('xowa.files.apps.view.media'                , <:{'cmd|/c start "" "~{file}"'}:>);
  set_dflt('xowa.files.apps.view.image'                , <:{'cmd|/c start "" "~{file}"'}:>);
  set_dflt('xowa.files.apps.view.svg'                  , <:{'cmd|/c start "" "~{file}"'}:>);
  set_dflt('xowa.files.apps.view.pdf'                  , <:{'cmd|/c start "" "~{file}"'}:>);
  set_dflt('xowa.files.apps.view.djvu'                 , <:{'cmd|/c start "" "~{file}"'}:>);

  // file maker apps
  set_dflt('xowa.files.apps.make.img_size_get'         , <:{'~{<>bin_plat_dir<>}imagemagick\identify|-ping -format "<{%w,%h}>" "~{file}"'}:>);                          // <{ and }> is hard-coded; do not change without changing source
  set_dflt('xowa.files.apps.make.img_size_set'         , <:{'~{<>bin_plat_dir<>}imagemagick\convert|"~{source}" -coalesce -resize ~{width}x~{height} "~{target}"'}:>);  // coalesce needed for some gifs; EX:w.Chess:[[File:ChessCastlingMovie.gif|thumb|250px|Examples of castling]]
  set_dflt('xowa.files.apps.make.svg_to_png'           , <:{'~{<>bin_plat_dir<>}inkscape\inkscape|-z -w ~{width} -f "~{source}" -e "~{target}"'}:>);
  set_dflt('xowa.files.apps.make.djvu_to_tiff'         , <:{'~{<>bin_plat_dir<>}djvulibre\ddjvu|-format=tiff -page=1 "~{source}" "~{target}"'}:>);
  
  // html utility app
  set_dflt('xowa.html.tidy.cmd'                        , <:{'~{<>bin_plat_dir<>}tidy\tidy|-utf8 --force-output y --quiet y --tidy-mark n --doctype '' --wrap 0 --indent y --quote-nbsp y --literal-attributes y --wrap-attributes n --fix-uri n --fix-backslash n --enclose-block-text y -o "~{target}" "~{source}"'}:>);

  // Scribunto extension
  set_dflt('xowa.addon.scribunto.lua.cmd'              , <:{'~{<>bin_plat_dir<>}lua\lua5.1.exe|'}:>);

  // Math extension
  set_dflt('xowa.addon.math.apps.tex_to_dvi'           , <:{'~{<>bin_plat_dir<>}miktex\texmfs\install\miktex\bin\latex|-quiet -output-directory="~{temp_dir}" -job-name=xowa_math_temp "~{tex_file}"'}:>);
  set_dflt('xowa.addon.math.apps.dvi_to_png'           , <:{'~{<>bin_plat_dir<>}miktex\texmfs\install\miktex\bin\dvipng|"~{dvi_file}" -o "~{png_file}" -q* -T tight -bg Transparent'}:>);

  // Score extension
  set_dflt('xowa.addon.score.apps.lilypond'            , <:{'~{<>bin_plat_dir<>}lilypond\usr\bin\lilypond.exe|"-dsafe=#t" -dbackend=ps --png --header=texidoc -dmidi-extension=midi "~{file}"'}:>);
  set_dflt('xowa.addon.score.apps.abc2ly'              , <:{'~{<>bin_plat_dir<>}lilypond\usr\bin\python.exe|abc2ly.py -s "--output=~{target}" "~{source}"'}:>);
  set_dflt('xowa.addon.score.apps.trim_img'            , <:{'~{<>bin_plat_dir<>}imagemagick\convert|-trim "~{source}" "~{target}"'}:>);
  set_dflt('xowa.addon.score.apps.midi_to_ogg'         , <:{'~{<>bin_plat_dir<>}timidity\timidity|-Ov "--output-file=~{target}" "~{source}"'}:>);
}
